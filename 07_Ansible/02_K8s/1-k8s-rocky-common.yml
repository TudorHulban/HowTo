---
- hosts: k8s-all
  become: yes
  remote_user: root
  tasks:

  - name: ping host
    ping:

  - name: timezone
    timezone: 
      name: Europe/Bucharest

  - name: prerequisites
    yum: 
      name: 
        - qemu-guest-agent
        - mc
        - yum-utils
        - net-tools   
        - telnet
        - python3-dnf-plugin-versionlock
        - yum-utils
      state: present

  - name: clean cache
    shell: |
      yum clean all
      rm -rf /var/cache/yum/*
      yum makecache
    

  - name: uninstall the installed Docker
    yum: 
      name:
       - docker-ce
       - docker-ce-cli
       - containerd.io
       - docker-latest-logrotate
       - docker-logrotate
       - docker-engine
       - docker-client
       - docker-client-latest
       - docker-common
       - container-tools
       - atomic-registries
       - containers-common
       - podman
       - skopeo
       - buildah
      state: absent   

  - name: clean up
    file:
      path: /var/lib/docker
      state: absent

  - name: disable swap
    shell: |
      swapoff -a
      sed -i 's/.*swap.*/#&/' /etc/fstab #    

  - name: enable bridging
    lineinfile: 
      path: /etc/sysctl.conf
      line: net.ipv4.ip_forward=1

  - name: Set up Docker repository
    shell: |
      yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo

  - name: Install Docker Engine and containerd
    # yum list available | grep docker-ce
    yum:
      name:
      - docker-ce-24.0.5
      - docker-ce-cli-24.0.5
      - containerd.io

  - name: configure Docker 1
    file:
      path: /etc/systemd/system/docker.service.d
      state: directory

  - name: create Docker configuration file 1
    copy: 
      dest: /etc/systemd/system/docker.service.d/proxy.conf
      content: |
         [Service]
         Environment="NO_PROXY=localhost,127.0.0.1"

  - name: create Docker configuration folder
    file:
      path: /etc/docker
      state: directory

  - name: create Docker configuration file 2
    copy: 
      dest: /etc/docker/daemon.json
      content: |
             {
                "exec-opts": ["native.cgroupdriver=systemd"],
                "log-driver": "json-file",
                "log-opts": {
                "max-size": "100m"
             },
                "storage-driver": "overlay2",
                "storage-opts": [
                "overlay2.override_kernel_check=true"
                ]
             }

  - name: configure Docker 2 - load new configuration
  # check Docker cgroup driver with:
  # docker info |grep -i cgroup
    shell: |
      systemctl daemon-reload
      systemctl restart docker
      systemctl enable docker


  - name: create K8s configuration file
    copy: 
      dest: /etc/yum.repos.d/kubernetes.repo
      content: |
          [kubernetes]
          name=Kubernetes
          baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
          enabled=1
          gpgcheck=1
          repo_gpgcheck=1
          gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg

  - name: install k8s
    yum: 
      name: 
        - kubelet-1.23.4
        - kubeadm-1.23.4
        - kubectl-1.23.4
      state: present

  - name: download K8S initial mirror
    shell: |
      kubeadm config images pull

  - name: OS optimizations
    shell: |
      systemctl disable firewalld
      systemctl stop firewalld
      setenforce 0  # Temporary disabled
      sed -i 's/SELINUX=enforcing/SELINUX=disabled/' /etc/sysconfig/selinux
      sed -i "s/SELINUX=enforcing/SELINUX=disabled/g" /etc/selinux/config
      systemctl enable kubelet.service


  - name: IP tables optimizations 1
    copy: 
      dest: /etc/sysctl.d/k8s.conf  
      content: |
          net.bridge.bridge-nf-call-ip6tables = 1  
          net.bridge.bridge-nf-call-iptables = 1  

  - name: reload parameters
    shell: |
      sysctl --system

  - name: lock version for k8s binaries and dependencies 
    shell: |
      yum versionlock kubelet kubeadm kubectl docker-ce docker-ce-cli containerd.io